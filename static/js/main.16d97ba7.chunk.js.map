{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","this","preparedGoods","goods","visibleGoods","sort","a","b","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","setState","prevState","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAgBKA,E,yEAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAaE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAU,GAJd,4CAOE,WAAU,IAAD,OACP,EAA4CC,KAAKJ,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SAqB/B,IAAME,EAnBN,SAA2BC,GACzB,IAAMC,EAAe,YAAID,GAAOE,MAAK,SAACC,EAAGC,GACvC,OAAQP,GACN,KAAKN,EAASc,QACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKb,EAASgB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAIb,OAAIZ,EACKK,EAAaQ,UAGfR,EAILS,CAAkBlB,GAEtB,OACE,sBAAKmB,UAAU,oCAAf,WACIhB,GACA,wBACEgB,UAAU,mBACVC,KAAK,SACLC,QAAS,kBAAO,EAAKC,SAAS,CAAEnB,WAAW,KAH7C,mBAQDA,GACC,qCACE,wBACEiB,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAO,EAAKC,SAAS,CAAEjB,SAAU,KAH5C,iCAOA,wBACEc,UAAU,sBACVC,KAAK,SACLC,QAAS,kBAAO,EAAKC,SAAS,CAAEjB,SAAU,KAH5C,4BAOA,wBACEc,UAAU,sBACVC,KAAK,SACLC,QAAS,kBAAO,EAAKC,UAAS,SAACC,GAAD,MAC5B,CAAEnB,YAAamB,EAAUnB,gBAJ7B,qBASA,wBACEe,UAAU,iBACVC,KAAK,SACLC,QAAS,kBAAO,EAAKC,SAAS,CAC5BjB,SAAU,EACVD,YAAY,KALhB,mBAUA,oBAAIe,UAAU,QAAd,SACGZ,EAAciB,KAAI,SAAAC,GAAI,OACrB,oBACEN,UAAU,cADZ,SAIGM,GAFIA,kBAlFvB,GAAyBC,aC1BzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.16d97ba7.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component <{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: 0,\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n\n    function getReorderedGoods(goods: string[]) {\n      const visibleGoods = [...goods].sort((a, b) => {\n        switch (sortType) {\n          case SortType.ALPABET:\n            return a.localeCompare(b);\n          case SortType.LENGTH:\n            return a.length - b.length;\n          default:\n            return 0;\n        }\n      });\n\n      if (isReversed) {\n        return visibleGoods.reverse();\n      }\n\n      return visibleGoods;\n    }\n\n    const preparedGoods\n      = getReorderedGoods(goodsFromServer);\n\n    return (\n      <div className=\"App block notification is-primary\">\n        {!isStarted && (\n          <button\n            className=\"button is-danger\"\n            type=\"button\"\n            onClick={() => (this.setState({ isStarted: true }))}\n          >\n            Start\n          </button>\n        )}\n        {isStarted && (\n          <>\n            <button\n              type=\"button\"\n              className=\"button is-info mr-3\"\n              onClick={() => (this.setState({ sortType: 1 }))}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              className=\"button is-info mr-3\"\n              type=\"button\"\n              onClick={() => (this.setState({ sortType: 2 }))}\n            >\n              Sort by length\n            </button>\n            <button\n              className=\"button is-info mr-3\"\n              type=\"button\"\n              onClick={() => (this.setState((prevState) => (\n                { isReversed: !prevState.isReversed }\n              )))}\n            >\n              Reverse\n            </button>\n            <button\n              className=\"button is-info\"\n              type=\"button\"\n              onClick={() => (this.setState({\n                sortType: 0,\n                isReversed: false,\n              }))}\n            >\n              Reset\n            </button>\n            <ul className=\"Goods\">\n              {preparedGoods.map(good => (\n                <li\n                  className=\"Goods__item\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}